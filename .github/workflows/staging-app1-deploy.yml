
name: Staging APP1 Deploy
on:
  pull_request_review:
    branches:
      - main
    types: [submitted]
    
jobs:
  set-parameters:
    if: github.event.review.state == 'approved'
    name: set-parameters
    runs-on: ubuntu-latest
    outputs: 
      branch_ref: ${{ steps.app_params.outputs.branch }}
      branch_base_ref: ${{ steps.app_params.outputs.branch_base_ref }}
      branch_head_ref: ${{ steps.app_params.outputs.branch_head_ref }}
    steps:
      - name: Set App Parameters
        id: app_params
        run: |
          echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
          echo "::set-output name=branch_base_ref::${GITHUB_BASE_REF}"
          echo "::set-output name=branch_head_ref::${GITHUB_HEAD_REF}"

  echo-branch:
    name: echo-branch
    runs-on: ubuntu-latest
    needs: [ set-parameters ]
    env:
      BRANCH: "${{ needs.set-parameters.outputs.branch }}"
      BRANCH_BASE_REF: "${{ needs.set-parameters.outputs.branch_base_ref }}"
      BRANCH_HEAD_REF: "${{ needs.set-parameters.outputs.branch_head_ref }}"
    steps:
      - name: ECHO
        run: |
          echo "Staging APP1 Deploy"
          echo "Branch_ref name is $BRANCH"
          echo "Branch_base_ref name is $BRANCH_BASE_REF"
          echo "Branch_head_ref name is $BRANCH_HEAD_REF"
          env | grep -i github | grep -iv token
      - name: Dump GitHub Context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Obtain context values
        run: |
          echo "event_name"
          echo '${{ github.event_name }}'
          echo "github.event.pull_request.head object"
          echo '${{ toJSON(github.event.pull_request.head) }}'
          


